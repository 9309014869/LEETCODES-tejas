// Online C compiler to run C program online

//////insertion\\\\
#include <stdio.h>	

int main() {
int a[8]={1,2,3,4,5,6};
int i,size,pos;
printf("enter the size\n");
scanf("%d",&size);
printf("enter the pos\n");
scanf("%d",&pos);
for  (i=size-1;i<pos-1;i--)
{
    a[i+1]=a[i];
}
a[pos-1]=75;
for(i=size-1;i<pos-1;i--)
{
    printf("%d",a[i]);
}
    return 0;
}



/////////////delection in c/////////////




#include <stdio.h>

void main() {
int a[15]={54,45,67,87,89},size,pos,i,num;
printf("enter size \n");
scanf("%d",&size);

printf("enter pos\n");
scanf("%d",&pos);


for(i=pos-1;i<=size-1;i++)
{
printf(" position before deletion is [%d]%d\n",i,a[i]);

    a[i]=a[i+1];
}

//a[]=23344;
   printf("%d\n",a[0]);
for(i=pos-1;i<=size-1;i++)
{
 
    printf(" position after deletion is [%d]%d\n",i,a[i]);
}
}




/////////array allocation to memory//////////////////////




// Online C compiler to run C program online
#include <stdio.h>

void main()
{
   int a[5],i;
   int *b[5];
   for(i=0;i<5;i++)
   {
       printf("the value of array before[%d]  =",i);
       scanf("%d",&a[i]);
   }
   for(i=0;i<5;i++)
   {
       b[i]=&a[(-i)+4];
   }
   
    for(i=0;i<5;i++)
   {
        printf("the value of after[%d] = ",i);
       printf("%d\n",*b[i]);
   }
}





////#first oops program using constructer and class  atributs and setter and getters////  


    public void setRadius(int radius){
        this.radius=radius;
    }
    public int getHeight(){
        return height;
    }
    public void setclass Cylinder {
    private int radius;
    private int height;
    public Cylinder(int radius,int height){
        this.radius=radius;
        this.height=height;
    }
    public int getRadius(){
        return radius;
    }Height(int height){
        this.height=height;
}
public double surfaceArea(){
    return 2*3.143*radius+2*3.143*radius*height;
}
}
public class Main
{
	public static void main(String[] args) {
	    Cylinder myCylinder=new Cylinder(radius 12,height 67);
	   // myCylinder.setHeight(12);
	    // myCylinder.setRadius(9);
	    System.out.println(myCylinder.surfaceArea());
	    
		System.out.println(myCylinder.getHeight());
	System.out.println(myCylinder.getRadius());
}
}



//////#implimention of stack using array///s

#include<stdio.h>
int stack[100],choice,n,top,x,i;
void push(void);
void pop(void);
void display(void);
int main()
{
    //clrscr();
    top=-1;
    printf("\n Enter the size of STACK[MAX=100]:");
    scanf("%d",&n);
    printf("\n\t STACK OPERATIONS USING ARRAY");
    printf("\n\t--------------------------------");
    printf("\n\t 1.PUSH\n\t 2.POP\n\t 3.DISPLAY\n\t 4.EXIT");
    do
    {
        printf("\n Enter the Choice:");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
            {
                push();
                break;
            }
            case 2:
            {
                pop();
                break;
            }
            case 3:
            {
                display();
                break;
            }
            case 4:
            {
                printf("\n\t EXIT POINT ");
                break;
            }
            default:
            {
                printf ("\n\t Please Enter a Valid Choice(1/2/3/4)");
            }
                
        }
    }
    while(choice!=4);
    return 0;
}
void push()
{
    if(top>=n-1)
    {
        printf("\n\tSTACK is over flow");
        
    }
    else
    {
        printf(" Enter a value to be pushed:");
        scanf("%d",&x);
        top++;
        stack[top]=x;
    }
}
void pop()
{
    if(top<=-1)
    {
        printf("\n\t Stack is under flow");
    }
    else
    {
        printf("\n\t The popped elements is %d",stack[top]);
        top--;
    }
}
void display()
{
    if(top>=0)
    {
        printf("\n The elements in STACK \n");
        for(i=top; i>=0; i--)
            printf("\n%d",stack[i]);
        printf("\n Press Next Choice");
    }
    else
    {
        printf("\n The STACK is empty");
    }
   
}





#include<stdio.h>
struct student{
   int sno;
   char sname[30];
   float marks;
};
main ( ){
   struct student s;
   struct student *st;
   printf("enter sno, sname, marks:");
   scanf ("%d%s%f", & s.sno, s.sname, &s. marks);
   st = &s;
   printf ("details of the student are");
   printf ("Number = %d\n", st ->sno);
   printf ("name = %s\n", st->sname);
   printf ("marks =%f\n", st ->marks);
   getch ( );
}







///// recurtion ///

#include <stdio.h>
int fact(int n);

int main() {
    

    printf("%d",fact(8));
    return 0;
}



int fact( int n){
    if(n==0||n==1)
        {
            return 1;
        }
       else{
            return n*fact(n-1);
       }
    }






#include <stdio.h>
double bisection(int l,int u);{
    return x*x+3x+2;
}

int main() {
int f(l),f(u),f(m),n;
int l,
printf("enter the lower limit");
scanf("%lf",&)


    return 0;
}
    


#stack program //




#include <stdio.h>
int val,choise,a[10];
    int str=-1,i;
void pop(){ 
    if(str==-1){
        printf("stack is empty\n");
    }else{
    val=a[str];
    printf(" the pop element is=%d\n",a[str]);
    str--;
}
}
void push(){
    if(str==9){
        printf("stack is full");
    }
    else{
    printf("enter the value=");
            scanf("%d",&val);
            str++;
            a[str]=val;
}
}
void display(){
    printf("the element are\n");
    for(i=0;i=str;i++){
        printf("%d\n",a[str]);
    }
}
int main() {
    
    while(1){
        printf("enter the 1 to push\n");
        printf("enter the 2 to push\n");
        printf("enter the 3 to push\n");
        scanf("%d",&choise);
        if(choise==1){
            push();
        }
        else if (choise==2){
           
            pop();

        }
        else{
              display();    
              }
        
    }
     
    return 0;
}








#include <stdio.h>
int bisection(int x){
    
    return x*x+3*x+2;
}
void f
int main() {
int l,r;
int u;
int n,f(l),f(r),f(u);
printf("enter the lower limit\n");
scanf("%d",&l);
printf("enter the lower upper limit\n");
scanf("%d",&u);
r=(l+u)/2;
f(l)=bisection(l);
f(r)=bisection(r);
f(u)=bisection(u);
do{
    if(f(l)*f(r)<0){
        u=r;
    }
    else if(f(l)*f(r)>0){
        l=r;
    }
    else if(f(l)*f(r)==0){
        break;
}
else{
    printf("correct the choise ");
}
}while(r>1);
printf("%d",r);

    return 0;
}










#include <stdio.h>

int bisection(int x){
    
    return x*x*x-20;
}
int main() {
double l,r;
double u;
double m,n,p;
printf("enter the lower limit\n");
scanf("%lf",&l);
printf("enter the while upper limit\n");
scanf("%lf",&u);

while(){
    r=(l+u)/2;
m=bisection(l);
n=bisection(r);
p=bisection(u);
    if(m*n<0){
        u=r;
        p=n;
        r=(l+u)/2;
        n=bisection(r);
    
    }
    else if(m*n>0){
        l=r;
        m=n;
        
    
    }
    else if(m*n==0){
        break;
}
else{
    printf("correct the choise ");
}
}
printf("%lf",m);

    return 0;
}





class HelloWorld {
    int n,m,p;
    public  void setCalculate(int x,int y ,int z){
       this.n=x;
      this.m=y;
       this.p=z;
    }
    public int avg(){
        return(n+m+p)/3 ;
        
    }
    public static void main(String[] args) {
        HelloWorld sc=new HelloWorld();
        sc.setCalculate(3,4,6);
      //  System.out.println(sc.setCalculate(2,3,5));
        System.out.println("avrage"+sc.avg());
    }
}







#include <stdio.h>
int rear=-1 , fornt=-1, a[10],val,i;
int main() {
    int choise;
    while(1){
    printf("enter the 1 for enqueue\n");
    printf("enter the 2 for dequeue\n");
    printf("enter the 3 for disply\n");
    scanf("%d",&choise);
switch(choise){
    case 1:

    if(rear==9){
        printf("queue isfull\n");
    }
    else{
        rear++;
        printf("enter the value\n");
        scanf("%d",&val);
        a[rear]=val;
    }
    break;
    case 2:
    if(rear==fornt){
        printf("empty\n");
    }
    else{
        fornt++;
        printf("value entered =");
        printf("%d\n",a[fornt]);
    }
    break;
    case 3:
    for(i=0;i<=rear;i++)
    {
        printf("%d\n",a[i]);
    }

break;
}
}
    return 0;
}







#include <stdio.h>
int rear=-1 , fornt=-1, a[4],val,i;
void enque(){
        rear++;
        printf("enter the value\n");
        scanf("%d",&val);
        a[rear]=val;
    }

void deqeue(){
    
     
    if(rear==fornt){
        printf("empty\n");
    }
    else{
        fornt++;
        printf("value entered =");
        printf("%d\n",a[fornt]);
    }
}
void display(){
    for(i=0;i<=rear;i++)
    {
        printf("%d\n",a[i]);
    }
}
int main() {
    int choise;
    do{
    printf("enter the 1 for enqueue\n");
    printf("enter the 2 for dequeue\n");
    printf("enter the 3 for disply\n");
    scanf("%d",&choise);
switch(choise){
    case 1:{
        enque();
    }
    
    break;
   case 2:{
       deqeue();
   }
    break;
    case 4:
    {
        printf("enter the corret choise");
    }
    break;
    case 3:{
        display();
    }
break;
}
}while(1);
    return 0;
}
















#include<stdio.h>
int stack[100],choice,n,top,x,i,min ;
void push(void);
void pop(void);
void display(void);
int main()
{
    //clrscr();
    top=-1;
    printf("\n Enter the size of STACK[MAX=100]:");
    scanf("%d",&n);
    printf("\n\t STACK OPERATIONS USING ARRAY");
    printf("\n\t--------------------------------");
    printf("\n\t 1.PUSH\n\t 2.POP\n\t 3.DISPLAY\n\t 4.EXIT");
    do
    {
        printf("\n Enter the Choice:");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
            {
                push();
                break;
            }
            case 2:
            {
                pop();
                break;
            }
            case 3:
            {
                display();
                break;
            }
            case 4:
            {
                printf("\n\t EXIT POINT ");
                break;
            }
            default:
            {
                printf ("\n\t Please Enter a Valid Choice(1/2/3/4)");
            }
                
        }
    }
    while(choice!=4);
    return 0;
}
void push()
{
    if(top>=n-1)
    {
        printf("\n\tSTACK is over flow");
        
    }
    else
    {
        printf(" Enter a value to be pushed:");
        scanf("%d",&x);
        top++;
        stack[top]=x;
    }
}
void pop()
{
    if(top<=-1)
    {
        printf("\n\t Stack is under flow");
    }
    else
    {
        printf("\n\t The popped elements is %d",stack[top]);
        top--;
    }
}
void display()
{
        printf("\n The elements in STACK \n");
        for(i=1; i<=top; i++){
           // printf("\n%d",stack[i]);
        //printf("\n Press Next Choice");
        if(stack[0]>stack[i]) {
            stack[0]=stack[i];
        }
       else if(stack[0]<stack[i]){
           stack[0]=min;
       }
        }
    printf("%d is max element",stack[0]);
 printf("%d is min",min);
}













// Online C compiler to run C program online
#include <stdio.h>
int fornt ,rear,a[6];
int max=6;

void enque(int n){
    if(fornt==-1&&rear==-1){
        rear=0;
        fornt=0;
        a[rear]=n;
    }
    else if((rear+1)%max==fornt){
        printf("full");
    }
    else{
   rear=(rear+1)%max;
   a[rear] =n;
}
}
void deque(){
    if(fornt==1&&rear==-1){
        printf("stack is empty");
    }
    else if  (fornt==rear){
        fornt=rear=-1;
        
    }
    else {
        printf("the deque element");
    fornt=(fornt+1)%max;
}
}
void display(){
    int i=fornt;
    if(fornt==-1&&rear==-1){
        printf("\nqueue is empty");
    }
    else{
        printf("\nelement is quue");
    }
    while(i<=rear){
        printf("%d",a[i]);
        i=(i+1)%max;
    }
}


int main()  
{  
    int choice=1,n;   // variables declaration  
      
    while(choice<4 && choice!=0)   // while loop  
    {  
    printf("\n Press 1: Insert an element");  
    printf("\nPress 2: Delete an element");  
    printf("\nPress 3: Display the element");  
    printf("\nEnter your choice");  
    scanf("%d", &choice);  
      
    switch(choice)  
    {  
          
        case 1:  
      
        printf("Enter the element which is to be inserted");  
        scanf("%d", &n);  
        enque(n);  
        break;  
        case 2:  
        deque();  
        break;  
        case 3:  
        display();  
  
    }}  
    return 0;  

}














#include <stdio.h>
#include <stdlib.h>
int a[10];
int rear=-1;
int fornt =-1;
int val;
void enque(int n){
    if(rear==-1&&fornt==-1){
        rear=0;
        fornt=0;
        a[rear]=n;
    }
    else if((rear+1)%10==fornt){
        printf("qnis overflo\n");
        
    }
    else{
        rear=(rear+1)%10;
        a[rear]=n;
        }}
    void deque(){
        if((rear==-1)&&(fornt==-1)){
            printf("queue is empty\n");
        }
        else if(rear=fornt){
            printf("%d",a[fornt]);
            fornt=rear=-1;
        }
        else{
            printf("%d",a[fornt]);
            fornt=(fornt+1)%10;
            
        }
    }
    void display(){
        int i=fornt;
        if(fornt==-1&&rear==-1){
            printf("ln the queue\n");
        }
        else {
            printf("element\n");
        }
        while(i<=rear){
            printf("%d",a[i]);
            
            i=(i+1)%10;
        }
    }
    int main(){
        int choise, n;
        while(1){
        printf("enter 1 for en\n");
         printf("enter 2 for d\n");
         scanf("%d",&choise);
         switch(choise){
             case 1:
             {
                 printf("enter the val\n");
                 scanf("%d",&n);
                enque(n);
             }
             break;
             case 2:
             {
               deque();
             }
             case 3:
             {
                  display(); 
             }
             break;
          
       
        }
        }
        return 0; 
    }
    
   
